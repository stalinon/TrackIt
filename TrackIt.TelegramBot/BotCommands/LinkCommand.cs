using Telegram.Bot;
using Telegram.Bot.Types;
using Telegram.Bot.Types.Enums;
using TrackIt.Application.Interfaces;

namespace TrackIt.TelegramBot.BotCommands;

/// <summary>
///     –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–∏–≤—è–∑–∫–∏ –∞–∫–∫–∞—É–Ω—Ç–∞
/// </summary>
internal sealed class LinkCommand(IUserLinkService linkService, IUserContext userContext) : BotCommand
{
    /// <inheritdoc />
    public override string Command => "/link";
    
    /// <inheritdoc />
    public override string Description => "–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–æ–¥ –¥–ª—è –ø—Ä–∏–≤—è–∑–∫–∏ Telegram –∫ –∞–∫–∫–∞—É–Ω—Ç—É.";

    /// <inheritdoc />
    public override async Task ExecuteAsync(ITelegramBotClient botClient, Message message, string[] args)
    {
        if (userContext.Email != null)
        {
            await botClient.SendMessage(message.Chat.Id, "‚ö† –û—à–∏–±–∫–∞: –ê–∫–∫–∞—É–Ω—Ç —É–∂–µ –ø—Ä–∏–≤—è–∑–∞–Ω");
            return;
        }
        
        var code = linkService.GenerateLinkCode(message.From!.Id);
        var text = $"üîó –í–∞—à –∫–æ–¥ –ø—Ä–∏–≤—è–∑–∫–∏: `{code}`\n" +
                   "–í–≤–µ–¥–∏—Ç–µ —ç—Ç–æ—Ç –∫–æ–¥ –Ω–∞ —Å–∞–π—Ç–µ.";
        await botClient.SendMessage(message.Chat.Id, 
            EscapeTelegramMarkdownV2(text), 
            ParseMode.MarkdownV2);
    }
}